<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:MaterialDesignExtensions.Controls;assembly=MaterialDesignExtensions"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mde="clr-namespace:MaterialDesignExtensions.Controls;assembly=MaterialDesignExtensions"
    xmlns:model="clr-namespace:MaterialDesignExtensions.Model;assembly=MaterialDesignExtensions">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/SiPintar;component/Assets/ResourceDictionaries/BaseStyle.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="navigationItemBackgroundBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="CornerRadius" Value="{Binding Path=SelectionCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type controls:SideNavigation}}}" />
        <Setter Property="Margin" Value="{Binding Path=SelectionMargin, RelativeSource={RelativeSource AncestorType={x:Type controls:SideNavigation}}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected}" Value="False">
                <Setter Property="Background" Value="Transparent" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                <Setter Property="Background" Value="{Binding Path=SelectionBackground, RelativeSource={RelativeSource AncestorType={x:Type controls:SideNavigation}}}" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding Path=SelectionBackground, RelativeSource={RelativeSource AncestorType={x:Type controls:SideNavigation}}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate DataType="{x:Type model:FirstLevelNavigationItem}">
        <Grid
            Width="180"
            Height="48"
            Margin="8,0"
            HorizontalAlignment="Left">
            <Border Style="{StaticResource navigationItemBackgroundBorderStyle}" />
            <Border
                Padding="16,0,0,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
                <Grid Height="24" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="24" />
                        <!--<ColumnDefinition Width="100*" />-->
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <ContentControl
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Content="{Binding Path=Icon}"
                        Focusable="False">
                        <ContentControl.Resources>
                            <DataTemplate DataType="{x:Type BitmapImage}">
                                <Image
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    SnapsToDevicePixels="True"
                                    Source="{Binding}" />
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type md:PackIconKind}">
                                <md:PackIcon
                                    x:Name="IconSideNavigation"
                                    Width="24"
                                    Height="24"
                                    Kind="{Binding}" />
                            </DataTemplate>
                        </ContentControl.Resources>
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsSelected}" Value="False">
                                        <Setter Property="Foreground" Value="{Binding Path=IconForeground, FallbackValue='#bdbdbd'}" />
                                        <!--<Setter Property="Foreground" Value="{Binding Path=IconForeground, RelativeSource={RelativeSource AncestorType={x:Type controls:SideNavigation}}}" />-->
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                        <Setter Property="Foreground" Value="{Binding Path=IconForeground, FallbackValue='#028ddb'}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                    <!--<TextBlock Grid.Column="1" FontSize="11" FontFamily="{StaticResource MontserratSemiBold}" TextWrapping="Wrap" FontWeight="SemiBold" Text="{Binding Path=Label}" TextTrimming="CharacterEllipsis"
                               Margin="13,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center">-->
                    <StackPanel Grid.Column="1" VerticalAlignment="Center">
                        <TextBlock
                            Margin="13,0,0,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            FontFamily="{StaticResource MontserratSemiBold}"
                            FontSize="11"
                            FontWeight="SemiBold"
                            Text="{Binding Path=Label}"
                            TextTrimming="CharacterEllipsis"
                            TextWrapping="Wrap">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="False">
                                            <Setter Property="Foreground" Value="{Binding Path=LabelForeground, RelativeSource={RelativeSource AncestorType={x:Type controls:SideNavigation}}}" />
                                            <Setter Property="TextWrapping" Value="Wrap" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                            <Setter Property="FontFamily" Value="{StaticResource MontserratBold}" />
                                            <Setter Property="FontWeight" Value="Bold" />
                                            <Setter Property="TextWrapping" Value="Wrap" />
                                            <!--<Setter Property="Width" Value="1000"/>-->
                                            <!--<Setter Property="Foreground" Value="Blue"/>-->
                                            <Setter Property="Foreground" Value="{Binding Path=SelectionForeground, RelativeSource={RelativeSource AncestorType={x:Type controls:SideNavigation}}}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type model:SubheaderNavigationItem}">
        <Border
            Height="36"
            Margin="16,0"
            Padding="0,0,0,10"
            Background="Transparent"
            BorderBrush="{StaticResource Gray50}"
            BorderThickness="0,0,0,.5">
            <TextBlock
                Grid.Column="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Bottom"
                FontFamily="{StaticResource MontserratSemiBold}"
                FontSize="13"
                FontWeight="Medium"
                Foreground="{DynamicResource Astronaut}"
                Text="{Binding Path=Subheader}"
                TextTrimming="CharacterEllipsis" />
        </Border>
    </DataTemplate>

    <Style x:Key="navigationItemButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="md:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
        <Setter Property="md:RippleAssist.ClipToBounds" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <md:Ripple
                        Padding="{TemplateBinding Padding}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        Feedback="{Binding Path=NavigationItemFeedback, RelativeSource={RelativeSource AncestorType={x:Type controls:SideNavigation}}}"
                        Focusable="False"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Violet" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SideNavigationMenu" TargetType="{x:Type mde:SideNavigation}">
        <Setter Property="Background" Value="{StaticResource AthensGray}" />
        <Setter Property="NavigationItemFeedback" Value="{StaticResource AthensGray}" />
        <Setter Property="SelectionBackground" Value="{StaticResource AthensGray}" />
        <Setter Property="SelectionForeground" Value="{StaticResource MineShaft}" />
        <Setter Property="IconForeground" Value="{StaticResource Silver}" />
        <Setter Property="LabelForeground" Value="{StaticResource DoveGray}" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type mde:SideNavigation}">
                    <Border
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Focusable="False"
                        Opacity="1">
                        <ScrollViewer
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            HorizontalScrollBarVisibility="Disabled"
                            VerticalScrollBarVisibility="Auto">
                            <ItemsControl
                                x:Name="navigationItemsControl"
                                Focusable="False"
                                ItemTemplateSelector="{StaticResource navigationItemKindTemplateSelector}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Focusable="False"
                                            IsItemsHost="True"
                                            Orientation="Vertical" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DateCaption" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource SarabunRegular}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource DoveGray}" />
    </Style>

    <Style x:Key="DateTitle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource MontserratSemiBold}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="{StaticResource SecondaryDarker}" />
    </Style>

    <Style x:Key="NavHorizontalStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="#919191" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="13,10" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="md:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
        <Setter Property="md:RippleAssist.ClipToBounds" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <StackPanel>
                        <md:Ripple
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Feedback="{Binding Path=NavigationItemFeedback, RelativeSource={RelativeSource AncestorType={x:Type controls:SideNavigation}}}"
                            Focusable="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="UnderLine"
                            Height="2"
                            Margin="5,0"
                            Background="#028ddb"
                            Visibility="Collapsed" />
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#028ddb" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="#028ddb" />
                            <Setter TargetName="UnderLine" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  SISTEM KONTROL  -->

    <Style x:Key="MenuText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource MontserratSemiBold}" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="{StaticResource Astronaut}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="0,0,0,15" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource CeruleanActive}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SubmenuText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource MontserratMedium}" />
        <Setter Property="FontSize" Value="11.5" />
        <Setter Property="Foreground" Value="{StaticResource Astronaut}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="10,0,0,10" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource CeruleanActive}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BtnWrapper" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="Transparent"
                        BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource CeruleanActive}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ExpanderToggle" TargetType="ToggleButton">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Margin="0,8">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="30" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="HeaderContent" ContentSource="Content" />
                        <Border
                            Grid.Column="1"
                            Height="20"
                            Padding="5,0,5,0"
                            Background="{StaticResource BaseGray}"
                            CornerRadius="5">
                            <Image
                                x:Name="ExpanderIcon"
                                Width="16"
                                Source="/SiPintar;component/Assets/Images/Action/ic_arrow_down.png" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  Change the sign to minus when toggled  -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpanderIcon" Property="Source" Value="/SiPintar;component/Assets/Images/Action/ic_arrow_up.png" />
                        </Trigger>

                        <!--  MouseOver, Pressed behaviours  -->
                        <Trigger Property="IsMouseOver" Value="true" />
                        <Trigger Property="IsPressed" Value="true" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderBtn" TargetType="Expander">
        <Setter Property="IsExpanded" Value="True" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <DockPanel>
                        <ToggleButton
                            x:Name="ExpanderButton"
                            Padding="1.5,0"
                            Content="{TemplateBinding Header}"
                            DockPanel.Dock="Top"
                            IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                            OverridesDefaultStyle="True"
                            Style="{StaticResource ExpanderToggle}" />
                        <ContentPresenter
                            x:Name="ExpanderContent"
                            Grid.Row="1"
                            DockPanel.Dock="Bottom"
                            Visibility="Collapsed" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuRadioItem" TargetType="RadioButton">
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <BulletDecorator Background="Transparent" Cursor="Hand">
                        <BulletDecorator.Bullet>
                            <Grid Width="0" Height="0">
                                <Border
                                    Name="RadioOuter"
                                    Background="Transparent"
                                    BorderBrush="Gainsboro"
                                    BorderThickness="2"
                                    CornerRadius="2" />
                                <Border
                                    Name="RadioMark"
                                    Margin="4"
                                    Background="#FFADADAD"
                                    CornerRadius="0"
                                    Visibility="Hidden" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <!--  Text element  -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="133" />
                                <ColumnDefinition Width="10" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                x:Name="Label"
                                Foreground="{StaticResource Astronaut}"
                                Style="{StaticResource SubmenuText}"
                                Text="{TemplateBinding Content}" />
                            <Border
                                x:Name="Indicator"
                                Grid.Column="1"
                                Width="5"
                                Margin="0,-3,-32,0"
                                HorizontalAlignment="Right"
                                Panel.ZIndex="100"
                                Background="Orange"
                                CornerRadius="5,0,0,5" />

                            <ContentPresenter Grid.ColumnSpan="2" Visibility="Collapsed" />
                        </Grid>
                    </BulletDecorator>
                    <!--  If item is checked, trigger the visibility of the mark  -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Indicator" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Label" Property="Foreground" Value="{StaticResource CeruleanActive}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Label" Property="Foreground" Value="{StaticResource Astronaut}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuRadioItemNoIndicator" TargetType="RadioButton">
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <BulletDecorator Background="Transparent" Cursor="Hand">
                        <BulletDecorator.Bullet>
                            <Grid Width="0" Height="0">
                                <Border
                                    Name="RadioOuter"
                                    Background="Transparent"
                                    BorderBrush="Gainsboro"
                                    BorderThickness="2"
                                    CornerRadius="2" />
                                <Border
                                    Name="RadioMark"
                                    Margin="4"
                                    Background="#FFADADAD"
                                    CornerRadius="0"
                                    Visibility="Hidden" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <!--  Text element  -->
                        <Grid>
                            <TextBlock
                                x:Name="Label"
                                Foreground="{StaticResource Astronaut}"
                                Style="{StaticResource SubmenuText}"
                                Text="{TemplateBinding Content}" />
                            <ContentPresenter Grid.ColumnSpan="2" Visibility="Collapsed" />
                        </Grid>
                    </BulletDecorator>
                    <!--  If item is checked, trigger the visibility of the mark  -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Label" Property="Foreground" Value="{StaticResource CeruleanActive}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="Label" Property="Foreground" Value="{StaticResource Astronaut}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
